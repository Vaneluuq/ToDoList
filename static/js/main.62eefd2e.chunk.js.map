{"version":3,"sources":["componenets/taskForm/task.module.css","componenets/login/signUpAndLogin.module.css","componenets/views/landingPage.module.css","componenets/login/FormLogin.jsx","componenets/initializers/firebase.js","componenets/login/firebaseAuth.js","componenets/login/Login.jsx","componenets/login/Register.jsx","componenets/views/LandingPage.jsx","componenets/taskForm/FormTask.jsx","componenets/taskForm/Task.jsx","componenets/taskForm/SearchTask.jsx","componenets/FetchData.jsx","componenets/views/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","props","email","setEmail","password","setPassword","handleOption","emailError","passwordError","btnLabel","greeting","displayName","setDisplayName","nameUser","handleGoogle","className","LoginCSS","containerForm","itemsForm","onSubmit","e","preventDefault","type","placeholder","autoFocus","required","value","onChange","target","errorMsg","onClick","href","providers","fb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","google","auth","GoogleAuthProvider","handleLogout","signOut","loginWithGoogle","signInWithPopup","authListener","callback","onAuthStateChanged","createTasks","notesObj","collection","doc","set","editingTask","id","update","getIdTask","get","Login","useState","user","setUser","setEmailError","setPasswordError","setNameUser","listenerAuth","useEffect","to","signInWithEmailAndPassword","loginUser","catch","err","code","message","then","res","console","log","Register","createUserWithEmailAndPassword","createUser","userCredential","LandingPage","hasAccount","setHasAccount","styles","container","containerLogin","title","account","FormTask","addTaskCollection","descriptionTask","existId","data","setData","getTaskById","a","taskCSS","taskMainList","name","Task","key","description","button1","button2","onClick2","checked","setChecked","tasksCSS","showTaskContainer","defaultChecked","editContainer","SearchTask","searchTask","setSearchTask","getTasksToScreen","search","onKeyUp","CatFacts","setItems","error","setError","isLoaded","setIsLoaded","fetch","json","result","TaskList","tasks","setTask","setExistId","num","setNum","items","userPhrases","setUserPhrases","filterTask","objNote","searchNote","filter","task","toLowerCase","includes","filterByBody","querySnapshot","myTask","forEach","push","onSnapshot","deleteTasks","swal","text","icon","buttons","respuesta","delete","deleteTask","showLogout","setShowLogout","containerTaskList","logout","class","addTask","numbersFacts","for","inputs","min","max","phrasesFromItems","i","length","fact","numberOfPhrases","splice","phrasesToShow","frase","frasesUsuario","nextId","phrasesSelect","containerTasks","map","item","removeArray","phrase","deletePhrase","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62eefd2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskMainList\":\"task_taskMainList__2DF13\",\"logout\":\"task_logout__2BHwP\",\"showLogout\":\"task_showLogout__1F6uy\",\"showTaskContainer\":\"task_showTaskContainer__3JwXX\",\"description\":\"task_description__27OPi\",\"editContainer\":\"task_editContainer__Wl6aX\",\"containerTaskList\":\"task_containerTaskList__2bY2j\",\"searchTask\":\"task_searchTask__1B0Jm\",\"addTask\":\"task_addTask__h7aI4\",\"numbersFacts\":\"task_numbersFacts__2TGWA\",\"inputs\":\"task_inputs__2JL-a\",\"containerTasks\":\"task_containerTasks__QLcOl\",\"search\":\"task_search__3ARvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"signUpAndLogin_containerForm__2RPlP\",\"itemsForm\":\"signUpAndLogin_itemsForm__3s5AT\",\"providers\":\"signUpAndLogin_providers__ve3OW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"landingPage_container__KTdJG\",\"containerLogin\":\"landingPage_containerLogin__qNr6e\",\"account\":\"landingPage_account__13wfd\",\"title\":\"landingPage_title__18Dja\"};","import React from 'react'\r\nimport LoginCSS from './signUpAndLogin.module.css'\r\n\r\n\r\n// componente base para la estructura principal de inicio de sesion o registro\r\nconst Form = (props) => {\r\n   const {\r\n    email,\r\n    setEmail,\r\n    password,\r\n    setPassword,\r\n    handleOption,\r\n    emailError,\r\n    passwordError, \r\n    btnLabel,\r\n    greeting,\r\n    displayName, \r\n    setDisplayName, \r\n    nameUser, \r\n    handleGoogle\r\n} = props\r\n\r\n// Se escuchan los cambios ocurridos en inputs\r\n const emailChange = (e) => setEmail(e.target.value);\r\n const passwordChange = (e) => setPassword(e.target.value);\r\n const submitData = (e) =>e.preventDefault();\r\n const userChange = (e) => setDisplayName(e.target.value);\r\n\r\n\r\n    return (\r\n            <section className={LoginCSS.containerForm}>\r\n               <h2>{greeting}</h2>\r\n                <form className={LoginCSS.itemsForm} onSubmit={submitData}>\r\n                    <input type=\"text\" placeholder=\"Email\" autoFocus required \r\n                            value={email} onChange={emailChange}/>\r\n                    <p className={LoginCSS.errorMsg}>{emailError}</p>\r\n                    <input type=\"password\" placeholder=\"Password\" required\r\n                            value={password} onChange={passwordChange}/>\r\n                    <p className={LoginCSS.errorMsg}>{passwordError}</p> \r\n\r\n                     { nameUser ? \r\n                        (\r\n                        <>\r\n                        <input type=\"text\" placeholder=\"Nombre de Usuario\"\r\n                            value={displayName} onChange={userChange}/>\r\n                            <br />\r\n                        </>\r\n                        ):(\r\n                            <>  </>\r\n                        )}\r\n\r\n                    <button type = \"submit\" onClick = {handleOption} > {btnLabel}</button> <br />\r\n                       { !nameUser ? (\r\n                           <a href=\"/login\">Olvide mi contraseña</a>\r\n                        ):(\r\n                          <> </>\r\n                        )}\r\n                </form> \r\n                <div className={LoginCSS.providers}>\r\n                    <p>Ó Continuar con</p>\r\n                    <button onClick = { handleGoogle }>  <i className=\"fab fa-google fa-2x\"></i> </button>\r\n                </div> \r\n        </section>\r\n    );\r\n};\r\n\r\n\r\nexport default Form;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n  \r\n  // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDemk1uInzTlHq7gMrVXOiJMDpx1I1x4d0\",\r\n    authDomain: \"todoproyect-cf198.firebaseapp.com\",\r\n    projectId: \"todoproyect-cf198\",\r\n    storageBucket: \"todoproyect-cf198.appspot.com\",\r\n    messagingSenderId: \"924178441944\",\r\n    appId: \"1:924178441944:web:183ee49dcec74e60b399ad\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  const db = fb.firestore();\r\n  const google = new firebase.auth.GoogleAuthProvider()\r\n\r\n\r\n  export { fb, db, google } ","import  { fb, db, google } from '../initializers/firebase'\r\n\r\n\r\n//firebase auth \r\n\r\nconst handleLogout = () => fb.auth().signOut();\r\n\r\n\r\nconst loginUser = (email, password) => fb.auth().signInWithEmailAndPassword(email, password);\r\n\r\nconst loginWithGoogle = () => fb.auth().signInWithPopup(google)\r\n\r\nconst createUser = (email, password) => fb.auth().createUserWithEmailAndPassword(email, password);\r\n\r\nconst authListener = (callback) => fb.auth().onAuthStateChanged(callback);\r\n\r\n// const listenToAuthState = (onLogIn, onLogOut, callback) => \r\n// fb.auth().onAuthStateChanged(callback)\r\n\r\n\r\n\r\n// firestore \r\n\r\nconst createTasks =(notesObj)=> db.collection('tasks').doc().set(notesObj);\r\nconst createPhrases =(notesObj)=> db.collection('phrases').doc().set(notesObj);\r\n\r\n\r\nconst getTasks = (callback) => db.collection('tasks').onSnapshot(callback);\r\nconst getPhrases = (callback) => db.collection('phrases').onSnapshot(callback);\r\n\r\n\r\nconst editingTask = (id, notesObj) => db.collection('tasks').doc(id).update(notesObj);\r\n\r\nconst deleteTask = (id) => db.collection('tasks').doc(id).delete();\r\nconst deletePhrase = (id) => db.collection('phrases').doc(id).delete();\r\n\r\nconst getIdTask =(id) => db.collection(\"tasks\").doc(id).get();\r\n\r\n\r\nexport { handleLogout, loginUser, authListener, createUser,\r\ngetTasks, createTasks, editingTask , deleteTask, getIdTask, createPhrases, getPhrases, deletePhrase, loginWithGoogle}\r\n","import React from 'react'\r\nimport Form from './FormLogin'\r\nimport { useState, useEffect } from 'react';\r\nimport {loginUser, authListener, loginWithGoogle} from './firebaseAuth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [user, setUser] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\")\r\n    const [nameUser, setNameUser] = useState(false)\r\n\r\n\r\n    //Se limpia data contenida en inputs\r\n    const clearInput= () => {\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    // Se borran errores mostrados en pantalla\r\n    const clearErrors = () => {\r\n        setEmailError('');\r\n        setPasswordError('');\r\n    }\r\n\r\n\r\n    // funcion ingresar con errores generados por email incorrecto, no encontrado.... \r\n    const handleLogin = () => {\r\n    clearErrors()\r\n\r\n    loginUser(email, password)\r\n    .catch(err => {\r\n        switch (err.code) {\r\n            case \"auth/invalid-email\":\r\n            case \"auth/user-disabled\":\r\n            case \"auth/user-not-found\":  \r\n                setEmailError(err.message);\r\n                break;\r\n            case \"auth/wrong-password\":\r\n                setPasswordError(err.message)\r\n                break;\r\n            default:  \r\n                setEmailError(err.message);\r\n            \r\n        }\r\n    })\r\n}\r\n\r\nconst handleGoogle = () => {\r\n    loginWithGoogle().then(res => {\r\n            setUser(res.user)\r\n        })\r\n        .catch(err => { console.log(err) })\r\n      }\r\n\r\n    const listenerAuth = () => {\r\n        authListener((user) => {\r\n            if(user){\r\n                clearInput();\r\n                setUser(user);\r\n            } else {\r\n                setUser(\"\");\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        listenerAuth();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n\r\n    return ( \r\n       <div>  \r\n          { user ? (\r\n           <Redirect to =\"/home\"></Redirect>\r\n        //  <Home handleLogout = {handleLogout}/>\r\n          ) : (\r\n            <Form\r\n            greeting = \"Ingresa a tu cuenta\"\r\n            btnLabel = \"Ingresar\"\r\n            email={email}\r\n            setEmail={setEmail} \r\n            password={password} \r\n            setPassword={setPassword} \r\n            handleOption = {handleLogin}\r\n            emailError = {emailError}\r\n            passwordError = {passwordError}\r\n            nameUser = {nameUser}\r\n            setNameUser = {setNameUser}\r\n            handleGoogle = {handleGoogle}\r\n            />  \r\n          )\r\n         }\r\n       </div>\r\n    ) \r\n}\r\n \r\nexport default Login;","import React from 'react'\r\nimport Form from './FormLogin';\r\nimport { useState , useEffect} from 'react';\r\nimport { createUser , authListener, loginWithGoogle} from './firebaseAuth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Register = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\")\r\n  const [displayName, setDisplayName] = useState(\"\")\r\n  const [nameUser, setNameUser] = useState(false)\r\n\r\n\r\n  const clearInput= () => {\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n  \r\n  const clearErrors = () => {\r\n        setEmailError('');\r\n        setPasswordError('');\r\n    }\r\n\r\n\r\n  const handleSignup = () => {\r\n        clearErrors();\r\n      createUser(email, password)\r\n      .then((userCredential) => {\r\n        let user = userCredential.user;\r\n        console.log(user)\r\n      }) \r\n     .catch(err => {\r\n        switch (err.code) {\r\n            case \"auth/email-already-in-use\":\r\n            case \"auth/invalid-email\":\r\n              setEmailError(err.message);\r\n              break;\r\n            case \"auth/weak-password\":\r\n              setPasswordError(err.message)\r\n              break;\r\n            default:  \r\n              setEmailError(err.message);\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleGoogle = () => {\r\n      loginWithGoogle()\r\n      .then(res => {\r\n          setUser(res.user)\r\n          setDisplayName(res.user.displayName)\r\n      })\r\n      .catch(err => { console.log(err) })\r\n    }\r\n\r\n\r\n  const listenerAuth = () => {\r\n    authListener((user) => {\r\n          if(user){\r\n              clearInput();\r\n              setUser(user);\r\n          } else {\r\n            setUser(\"\");\r\n          }\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n      listenerAuth();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return(\r\n    <div>\r\n    { user ? \r\n        ( \r\n        <Redirect to =\"/home\"> </Redirect>\r\n      ) : ( \r\n    <Form\r\n      greeting = \"Crea tu cuenta ToDo helper\"\r\n      btnLabel = \"Registrarse\"\r\n      email={email}\r\n      setEmail={setEmail} \r\n      password={password} \r\n      setPassword={setPassword} \r\n      handleOption={handleSignup} \r\n      emailError = {emailError}\r\n      passwordError = {passwordError}\r\n      setDisplayName = {setDisplayName}\r\n      displayName = {displayName}\r\n      nameUser = {nameUser}\r\n      handleGoogle = {handleGoogle}\r\n      />   \r\n     )}\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Register;\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './landingPage.module.css'\r\nimport Login from '../login/Login'\r\nimport Register from '../login/Register';\r\nimport { useState } from 'react';\r\n\r\n// componente que renderiza el inicio de sesion o registro de usuario\r\nconst LandingPage = () => {\r\n    const [hasAccount, setHasAccount] = useState(false);\r\n    return (  \r\n        <div className={styles.container}>\r\n          <div className={styles.containerLogin}>\r\n            <div className={styles.title}>\r\n              <h1>ToDo Helper</h1>\r\n                { hasAccount ? (\r\n                  <>\r\n                    <Login></Login>\r\n                    <div className={styles.account}>\r\n                      <p>Aun no tengo cuenta</p>\r\n                      <button onClick={()=> setHasAccount(!hasAccount)}>Registrarse</button>\r\n                    </div>\r\n                  </>\r\n                    ):(\r\n                  <>\r\n                    <Register></Register>\r\n                    <div className={styles.account}>\r\n                      <p>Ya tengo cuenta</p>\r\n                      <button onClick={()=> setHasAccount(!hasAccount)}> Ingresar</button>\r\n                    </div>\r\n                  </>)\r\n                }\r\n            </div>\r\n          </div>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default LandingPage;\r\n","import React from 'react'\r\nimport taskCSS from './task.module.css'\r\nimport { useState, useEffect} from 'react';\r\nimport {getIdTask} from '../login/firebaseAuth'\r\n\r\n// componente formato principal para la creacion de tareas \r\nconst FormTask= ({addTaskCollection, descriptionTask, existId}) => {\r\n    \r\n\r\n    const [data, setData] = useState({\r\n        descriptionTask: \"\"\r\n    })   \r\n\r\n    // se leen los cambios de input descriptionTask\r\n    const handleInputChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    // se guardan los datos del input checkbox y descriptiontask en la base de datos de firebase\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n          addTaskCollection({...data});\r\n      }\r\n\r\n      console.log(data)\r\n\r\n\r\n    const getTaskById  = async (id) => {\r\n        const doc = await getIdTask(id);\r\n            setData({...doc.data()})\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if (existId === \"\") {\r\n            setData({descriptionTask:\"\"});\r\n        } else {\r\n            getTaskById(existId);\r\n        }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[existId]);\r\n\r\n\r\n    return ( \r\n     <form className ={taskCSS.taskMainList} onSubmit={handleSubmit}>\r\n        <input id=\"descriptionTask\" \r\n                placeholder=\"Escribe tu tarea aqui\"\r\n                value={existId === \"\" ? descriptionTask : data.descriptionTask}\r\n                name=\"descriptionTask\"\r\n                onChange={handleInputChange}\r\n                required/>\r\n        <input type=\"submit\" value={existId === \"\" ? \"Guardar\" : \"Actualizar\"}/>\r\n     </form>\r\n    );\r\n}\r\n\r\nexport default FormTask;","import React from 'react'\r\nimport tasksCSS from './task.module.css'\r\nimport { useState } from 'react';\r\n\r\n// componente que renderiza el formato de las tareas en pantalla\r\nconst Task = ({key, description, button1, button2, onClick, onClick2}) => {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    return (    \r\n    <div id=\"showNotesContainer\" key={key} className={tasksCSS.showTaskContainer}>\r\n        <div className={tasksCSS.description}>\r\n         <input type=\"checkbox\"\r\n                defaultChecked={checked}\r\n                onChange={() => setChecked(!checked)}\r\n          />\r\n             <p>{description}</p>\r\n      \r\n        </div>\r\n        <div className={tasksCSS.editContainer}>\r\n            <button onClick= {onClick}>{button1}</button>\r\n            <button onClick= {onClick2}>{button2}</button>\r\n        </div>\r\n    </div>);\r\n    }\r\n \r\nexport default Task;","import React from 'react'\r\nimport tasksCSS from './task.module.css'\r\n\r\n\r\n// componente de barra de busqueda de tareas \r\nfunction SearchTask({searchTask, setSearchTask, getTasksToScreen}) {\r\n\r\n  const inputChange = (e) => setSearchTask(e.target.value);\r\n \r\n    return (\r\n     <div className={tasksCSS.search}>\r\n        <input type=\"text\" \r\n               placeholder=\"Buscar mi nota\"  \r\n               value={searchTask} \r\n               onChange={inputChange} \r\n               onKeyUp={getTasksToScreen}/>   \r\n        <button type=\"button\"><i className=\"fas fa-search\"></i></button> \r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default SearchTask\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nfunction CatFacts({setItems}) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      fetch(\"https://catfact.ninja/facts?limit=${bred}\")\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n          setIsLoaded(true);\r\n          setItems(result.data);\r\n           },\r\n          (error) => {\r\n            console.log(error)\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }, [])\r\n  \r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n       <> </>\r\n      );\r\n    }\r\n }\r\n\r\n  export default CatFacts","import React, { useState, useEffect} from 'react' \r\nimport { createTasks, editingTask, getTasks, deleteTask, handleLogout} from '../login/firebaseAuth';\r\nimport FormTask from '../taskForm/FormTask'\r\nimport Task from '../taskForm/Task';\r\nimport SearchTask from '../taskForm/SearchTask';\r\nimport CatFacts from '../FetchData';\r\nimport swal from 'sweetalert'\r\nimport tasksCSS from '../taskForm/task.module.css'\r\nimport nextId from \"react-id-generator\";\r\nimport { Link} from 'react-router-dom';\r\n\r\n\r\n// componente que renderiza los diversos componentes que conforman el home \r\n\r\nconst TaskList = () => {\r\n    // se guardan las tareas \r\n    const [tasks, setTask] = useState([]);\r\n    // Se guarda id de las tareas en firebase\r\n    const [existId, setExistId] = useState(\"\");\r\n    // se guarda valor del input search para filtar por descripcion \r\n    const [searchTask, setSearchTask] = useState(\"\");\r\n    // se guarda numero seleccionado por el usuario\r\n    const [num, setNum] = useState(1);\r\n    //se guardan frases de la api de gatos \r\n    const [items, setItems] = useState([]);\r\n    // se guardan frases en firebase \r\n    const [userPhrases, setUserPhrases] = useState([]);\r\n    // const [phasesToScreen, setPhasesToScreen] = useState([]);\r\n\r\n\r\n    const logout = () => {\r\n      console.log(\"nada\")\r\n      handleLogout().then(() => {  \r\n        console.log(\"hola\")     \r\n      }).catch(function(error) {\r\n        console.log(error)\r\n      });\r\n    }\r\n\r\n    // se identifica el valor del input num (numero de frases seleccionadas por el usuario)\r\n    const numberFacts = (e) => setNum(e.target.value);\r\n\r\n    // Se crea o edita una tarea\r\n    const addTaskCollection = async (notesObj) => { \r\n      if(existId ===\"\"){   \r\n        await createTasks(notesObj);\r\n        }else{\r\n          await editingTask(existId, notesObj)\r\n          setExistId(\"\")\r\n      }  \r\n    }\r\n\r\n   // se filtran las tareas por texto de descripcion \r\n    const filterTask = async(objNote, searchNote) => {\r\n          const filterByBody = await objNote.filter(task => task.descriptionTask.toLowerCase().includes(searchNote.toLowerCase()))\r\n          setTask(filterByBody)\r\n      };\r\n\r\n\r\n    // se obtienen las tareas de firebase y se muestran en pantalla\r\n    const getTasksToScreen = async () => {\r\n        getTasks((querySnapshot) => {\r\n            const myTask = [];\r\n            querySnapshot.forEach(doc => {\r\n            myTask.push({...doc.data(), id:doc.id});\r\n            });\r\n            if(searchTask ===\"\"){\r\n                setTask(myTask);\r\n              }else{\r\n                filterTask(myTask, searchTask)\r\n              }\r\n        });      \r\n    };\r\n\r\n        // funcion que relaciona input num y api frases\r\n        let phrasesSelect =() => {\r\n          let phrasesFromItems = []\r\n           for (let i = 0; i < items.length; i++) {\r\n             phrasesFromItems.push(items[i].fact)\r\n            }\r\n          let numberOfPhrases = phrasesFromItems.splice(0, num);\r\n \r\n           let phrasesToShow =[]\r\n            numberOfPhrases.forEach(frase => \r\n             phrasesToShow.push({frasesUsuario: frase, id:nextId()})\r\n             )\r\n            setUserPhrases(phrasesToShow);\r\n        };\r\n\r\n\r\n       //  let random = Math.floor(Math.random() * item.length)\r\n\r\n      useEffect(() => {\r\n        getTasksToScreen();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []); \r\n\r\n\r\n   // se borran las tareas \r\n    const deleteTasks = (id) => {\r\n      swal({\r\n        title: \"Se eliminará tu tarea\",\r\n        text: \"Quieres continuar?\",\r\n        icon: \"warning\",\r\n        buttons: [\"No\", \"Si\"]\r\n        }).then(respuesta => {\r\n        if(respuesta){\r\n          deleteTask(id);\r\n        }\r\n      })\r\n    }\r\n\r\n    // se borran las frases\r\n    const deletePhrase = id => {\r\n      const removeArray = [...userPhrases].filter(phrase => phrase.id !== id)\r\n      swal({\r\n        title: \"Se eliminará tu tarea\",\r\n        text: \"Quieres continuar?\",\r\n        icon: \"warning\",\r\n        buttons: [\"No\", \"Si\"]\r\n        }).then(respuesta => {\r\n        if(respuesta){\r\n      setUserPhrases(removeArray)\r\n        }\r\n     })\r\n  }\r\n\r\n\r\n  const [showLogout, setShowLogout] = useState(false)\r\n\r\n  function openModal() {\r\n    setShowLogout(true);\r\n }\r\n\r\n // Se cierra modal que crea o edita nota\r\n const closeModal = () => {\r\n   setShowLogout(false);\r\n }\r\n\r\n\r\n    return(\r\n    <div className= {tasksCSS.containerTaskList}>\r\n     {\r\n      showLogout ? (\r\n        <div className= {tasksCSS.logout}>\r\n         <button onClick= {closeModal}><i class=\"fas fa-window-close\"></i></button>\r\n          <Link to=\"/\">\r\n                <button onClick= {handleLogout}><i class=\"fas fa-sign-out-alt\">LogOut</i></button>\r\n          </Link>\r\n        </div>\r\n\r\n      ): (\r\n        <div className= {tasksCSS.showLogout}>\r\n           <button onClick= {openModal}>Ver más</button>\r\n        </div>\r\n      )\r\n    } \r\n      <div className= {tasksCSS.searchTask}>\r\n        <h2>To-Do-Helper</h2>\r\n        <SearchTask\r\n            searchTask = {searchTask}\r\n            setSearchTask = {setSearchTask}\r\n            getTasksToScreen = {getTasksToScreen}\r\n            />\r\n      </div>\r\n      <div className= {tasksCSS.addTask}>\r\n        <div className= {tasksCSS.numbersFacts}>\r\n          <label for=\"frases\">Numero de frases aleatorias a traer(1-10):</label>\r\n          <div className= {tasksCSS.inputs}>\r\n           <input type=\"number\" id=\"frases\" name=\"frases\" min=\"1\" max=\"10\" value={num}  onChange={numberFacts}/>\r\n           <button onClick = {() => phrasesSelect()} >Generar</button>\r\n          </div>\r\n        </div>\r\n        <FormTask\r\n        addTaskCollection = {addTaskCollection}\r\n        existId ={existId}\r\n        />\r\n      </div>\r\n      <div className= {tasksCSS.containerTasks}>\r\n        {(\r\n          tasks.map((task)=>( \r\n            <Task\r\n            key={task.id} \r\n            description = {task.descriptionTask}\r\n            button1 = {\"Borrar\"}\r\n            onClick={() => deleteTasks(task.id)}\r\n            button2 = {\"Editar\"}\r\n            onClick2 = {() => setExistId(task.id)}\r\n            />\r\n           ))\r\n        )}\r\n          {(\r\n          userPhrases.map((item) => (\r\n           <Task\r\n            key={item.id} \r\n            description = {item.frasesUsuario}\r\n            button1 = {\"Borrar\"}\r\n            onClick={() => {deletePhrase(item.id)}}\r\n            button2 = {\"Editar\"}\r\n            onClick2 = {() => setExistId(item.id)}\r\n            />\r\n        ))\r\n      )}\r\n      </div>\r\n      <CatFacts\r\n      items = {items}\r\n      setItems = {setItems}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, { Fragment } from 'react';\nimport './App.css';\nimport Login from './componenets/login/Login';\nimport Register from './componenets/login/Register';\nimport LandingPage from './componenets/views/LandingPage';\nimport TaskList from './componenets/views/Home';\n\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"container\">\n      <Switch>\n        <Route path=\"/\" exact>\n           <LandingPage></LandingPage>\n        </Route>\n        <Route path=\"/login\">\n            <Login></Login>\n        </Route>\n        <Route path=\"/signup\">\n          <Register></Register>\n        </Route>\n        <Route path=\"/home\">\n          <TaskList></TaskList>\n        </Route>\n      </Switch> \n      </div>\n    </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './componenets/initializers/firebase'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}